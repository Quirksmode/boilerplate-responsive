/**
 * @class css.mixins.mixins
 *
 * Here we define the reusable helper mixins
 *
 * ## Usage
 * Import into your main file using
 *
 *     @import "__mixins/_mixins.scss";
 *
 *
 * ## Additional
 * We can also use compass which is a library of helper mixins. Here are the ones we commonly use:
 *
 * @include transition(all 0.3s ease-out);
 */

/**
 * Font
 * @param {Number/String} fontSize
 * @param {Number/String} lineHeight
 * @param {String} fontFamily
 * Usage:
 *     @include font(14, 16, $f-opensans);
 * Or
 *     @include font(14, 16);
 */
@mixin font($fontSize: 1.6, $lineHeight: $fontSize * 1.5, $fontFamily: inherit) {
    $lteIE8: false !default;

    @if $fontFamily != inherit {
        font-family: $fontFamily;
    }
    @if $lteIE8 {
      font-size: $fontSize + px;
      line-height: $lineHeight + px;
    }
    @else {
      font-size: ($fontSize / 10) + rem;
      line-height: ($lineHeight / 10) + rem;
    }
}


/**
 * Transparency
 * @param {String} color
 * @param {String} alpha
 *
 * Usage:
 *     @include background-transparent(#000, .8);
 */
@mixin background-transparent($color, $alpha) {
  $lteIE8: false !default;

  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;

  // Only IE8 should out see these styles
  @if $lteIE8 == true {
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
    zoom: 1;
  }
}


/**
 * Border Radius
 *
 * Usage:
 *     @include border-radius(5px, 5px, 5px, 5px);
 */
@mixin border-radius($topLeft, $topRight, $bottomRight, $bottomLeft) {
    -webkit-border-radius: $topLeft $topRight $bottomRight $bottomLeft;
    -moz-border-radius: $topLeft $topRight $bottomRight $bottomLeft;
    -ms-border-radius: $topLeft $topRight $bottomRight $bottomLeft;
    -o-border-radius: $topLeft $topRight $bottomRight $bottomLeft;
    border-radius: $topLeft $topRight $bottomRight $bottomLeft;
}


/**
 * Text Shadow
 *
 * Usage:
 *     @include text-shadow(0, 3px, 3px, #333);
 */
@mixin text-shadow($horizOffset, $vertOffset, $blur, $color) {
    -webkit-text-shadow: $horizOffset $vertOffset $blur $color;
    -moz-text-shadow: $horizOffset $vertOffset $blur $color;
    -ms-text-shadow: $horizOffset $vertOffset $blur $color; /* IE 10+ */
    -o-text-shadow: $horizOffset $vertOffset $blur $color;
    text-shadow: $horizOffset $vertOffset $blur $color;
}


/**
 * Box Shadow
 *
 * Usage:
 *     @include box-shadow(inset 0 1px 1px rgba(0, 0, 0, 0.075));
 */
@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
    -webkit-box-shadow:$top $left $blur $color #{$inset};
    -moz-box-shadow:$top $left $blur $color #{$inset};
    box-shadow:$top $left $blur $color #{$inset};
}


/**
 * Opacity
 *
 * Usage:
 *     @include opacity(0.5);
 */
@mixin opacity($opacity) {
    opacity: $opacity;
    filter:alpha(opacity=$opacity*100); /* For IE8 and earlier */
}


/**
 * Transform
 *
 * Usage:
 *     @include transform(translateY(20px));
 */
@mixin transform($params) {
    -webkit-transform: $params;
    -moz-transform:    $params;
    transform:         $params;
}


/**
 * Rotate
 *
 * Usage:
 *     @include rotate(180);
 *
 */
@mixin rotate($deg: 0) {
     -moz-transform: rotate($deg + deg);
       -o-transform: rotate($deg + deg);
  -webkit-transform: rotate($deg + deg);
      -ms-transform: rotate($deg + deg);
          transform: rotate($deg + deg);
               zoom: 1;
}


/**
 * Bespoke Style vendor prefixer for simple CSS3 Properties
 *
 * Usage:
 *     @include css3(transition-delay, 0.4s);
 */
@mixin css3($property, $value) {
     @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
          #{$prefix}#{$property}: $value;
     }
}





/**
 * Absolute Positioned
 *
 * Usage:
 *     @include absPosition(5px, 20px, 10px, 15px);
 */
@mixin abs-position ($top: auto, $right: auto, $bottom: auto, $left: auto) {
     position: absolute;
     top: $top;
     right: $right;
     bottom: $bottom;
     left: $left;
}



/**
 * Retina Images
 *
 * Usage:
 *      @include image-2x("logo2x.png", 100px, 25px);
 */
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}



/**
 * Visually hidden, but have it available for screen readers
 *
 * Usage:
 *     @include vhdn;
 */
@mixin vhdn {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/**
 * Remove visually hidden
 *
 * Usage:
 *     @include vhdn-off;
 */
@mixin vhdn-off {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}


/**
 * Antialias Text
 *
 * Usage:
 *     @include anti-alias-text;
 */
@mixin anti-alias-text {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}




/**
* @section SPACING VARIABLES
* Using these variables will save you a lot of time and effort, when the screen responds so will these values.
* Please take great care to select the correct ones, if an element is within the sidebar, use the sidebar variables.
* Sometimes there may be padding surrounding the element, to maintain accuracy use the -innr- variables.
* Feel free to add more if needed, and remember to update all these if the designs are changed with new widths.
*/

// Use for elements found within the .s-main div (width: 768px)
$spacing-10: 1.3020833333%; // 10px Spacing 10 / 768 * 100 / 1

